// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lead form footer module should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Footer
    goBack={[Function]}
    goBackDisabled={true}
    goForward={[Function]}
    goNextDisabled={true}
    isLastSlide={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="flexFull back-button-text disabled"
          type="button"
        >
          <span
            className="arrow-icon-container left"
          >
            <IconSvg />
          </span>
          Back
        </button>,
        <button
          className="btn-filled-pri-large flexFull disabled"
          onClick={[Function]}
          type="button"
        >
          Next
          <span
            className="arrow-icon-container"
          >
            <IconSvg />
          </span>
        </button>,
      ],
      "className": "form-footer p8 flex",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="arrow-icon-container left"
            >
              <IconSvg />
            </span>,
            "Back",
          ],
          "className": "flexFull back-button-text disabled",
          "type": "button",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <IconSvg />,
              "className": "arrow-icon-container left",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "span",
          },
          "Back",
        ],
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Next",
            <span
              className="arrow-icon-container"
            >
              <IconSvg />
            </span>,
          ],
          "className": "btn-filled-pri-large flexFull disabled",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": Array [
          "Next",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <IconSvg />,
              "className": "arrow-icon-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "span",
          },
        ],
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="flexFull back-button-text disabled"
            type="button"
          >
            <span
              className="arrow-icon-container left"
            >
              <IconSvg />
            </span>
            Back
          </button>,
          <button
            className="btn-filled-pri-large flexFull disabled"
            onClick={[Function]}
            type="button"
          >
            Next
            <span
              className="arrow-icon-container"
            >
              <IconSvg />
            </span>
          </button>,
        ],
        "className": "form-footer p8 flex",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="arrow-icon-container left"
              >
                <IconSvg />
              </span>,
              "Back",
            ],
            "className": "flexFull back-button-text disabled",
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <IconSvg />,
                "className": "arrow-icon-container left",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "span",
            },
            "Back",
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Next",
              <span
                className="arrow-icon-container"
              >
                <IconSvg />
              </span>,
            ],
            "className": "btn-filled-pri-large flexFull disabled",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            "Next",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <IconSvg />,
                "className": "arrow-icon-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "span",
            },
          ],
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
