// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox module should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Checkbox
    disabled={false}
    filterCountKey="hotel_ratings_3"
    handleOnChange={[MockFunction]}
    id={2}
    isChecked={false}
    name="hotel_ratings[]"
    title="3 Star"
    value="3"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="flex"
      >
        <input
          checked={false}
          className="checkbox-common"
          disabled={false}
          id="filter_hotel_ratings[]_3"
          name="hotel_ratings[]"
          onChange={[Function]}
          type="checkbox"
          value="3"
        />
        <label
          className="break-all"
          htmlFor="filter_hotel_ratings[]_3"
        >
          3 Star
        </label>
      </div>,
      "className": "col-xs-6 p0 option-overflow",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            checked={false}
            className="checkbox-common"
            disabled={false}
            id="filter_hotel_ratings[]_3"
            name="hotel_ratings[]"
            onChange={[Function]}
            type="checkbox"
            value="3"
          />,
          <label
            className="break-all"
            htmlFor="filter_hotel_ratings[]_3"
          >
            3 Star
          </label>,
          null,
        ],
        "className": "flex",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "checked": false,
            "className": "checkbox-common",
            "disabled": false,
            "id": "filter_hotel_ratings[]_3",
            "name": "hotel_ratings[]",
            "onChange": [Function],
            "type": "checkbox",
            "value": "3",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "3 Star",
            "className": "break-all",
            "htmlFor": "filter_hotel_ratings[]_3",
          },
          "ref": null,
          "rendered": "3 Star",
          "type": "label",
        },
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="flex"
        >
          <input
            checked={false}
            className="checkbox-common"
            disabled={false}
            id="filter_hotel_ratings[]_3"
            name="hotel_ratings[]"
            onChange={[Function]}
            type="checkbox"
            value="3"
          />
          <label
            className="break-all"
            htmlFor="filter_hotel_ratings[]_3"
          >
            3 Star
          </label>
        </div>,
        "className": "col-xs-6 p0 option-overflow",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              checked={false}
              className="checkbox-common"
              disabled={false}
              id="filter_hotel_ratings[]_3"
              name="hotel_ratings[]"
              onChange={[Function]}
              type="checkbox"
              value="3"
            />,
            <label
              className="break-all"
              htmlFor="filter_hotel_ratings[]_3"
            >
              3 Star
            </label>,
            null,
          ],
          "className": "flex",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "checked": false,
              "className": "checkbox-common",
              "disabled": false,
              "id": "filter_hotel_ratings[]_3",
              "name": "hotel_ratings[]",
              "onChange": [Function],
              "type": "checkbox",
              "value": "3",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "3 Star",
              "className": "break-all",
              "htmlFor": "filter_hotel_ratings[]_3",
            },
            "ref": null,
            "rendered": "3 Star",
            "type": "label",
          },
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
