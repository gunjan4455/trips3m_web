// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`View module should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ContactDetails
    handleSubmit={[MockFunction]}
    isCancelledTrip={false}
    isConvertedTrip={false}
    preferences={
      Object {
        "email": "UserEmail_1451193@gmail.com",
        "isdCode": "+91",
        "phoneNo": "9498297800",
      }
    }
    trackSegment={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="flex alignCenter spaceBetween mb15"
        >
          <h6
            className="flex alignCenter f16 fw9 m0 flexFull"
          >
            <span
              className="block input-24 mr8"
            >
              <IconSvg />
            </span>
            <span
              className="sfc6 at_headingContectDetail"
            >
              Contact Details
            </span>
          </h6>
          <ModalComponent
            customClass=""
            customCloseTrigger={false}
            disabled={false}
            fullView={true}
            hasCustomClose={true}
            hasNoClose={false}
            isTriggerFullView={false}
            isWhiteIcon={false}
            onAfterModalOpen={[Function]}
            onRequestCloseCustom={[Function]}
            trigger={
              <span
                className="sfc1 f14 fw7 at_edit1"
                onClick={[Function]}
              >
                Edit
              </span>
            }
          >
            <ReduxForm
              initialValues={
                Object {
                  "email": "UserEmail_1451193@gmail.com",
                  "isdCode": "+91",
                  "phoneNo": "9498297800",
                }
              }
              onSubmit={[Function]}
            />
          </ModalComponent>
        </div>,
        <div
          className="flex flexWrap"
        >
          <ForwardRef(render)
            className="flexFull mb15 break-word"
          >
            <p>
              Email ID
            </p>
            <p
              className="at_email"
            >
              UserEmail_1451193@gmail.com
            </p>
          </ForwardRef(render)>
          <ForwardRef(render)
            className="flexFull mb15 break-word"
          >
            <p>
              Phone Number
            </p>
            <p
              className="at_phone"
            >
              +919498297800
            </p>
          </ForwardRef(render)>
        </div>,
      ],
      "className": "sbcw p15 pb0 at_contactDetails",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h6
              className="flex alignCenter f16 fw9 m0 flexFull"
            >
              <span
                className="block input-24 mr8"
              >
                <IconSvg />
              </span>
              <span
                className="sfc6 at_headingContectDetail"
              >
                Contact Details
              </span>
            </h6>,
            <ModalComponent
              customClass=""
              customCloseTrigger={false}
              disabled={false}
              fullView={true}
              hasCustomClose={true}
              hasNoClose={false}
              isTriggerFullView={false}
              isWhiteIcon={false}
              onAfterModalOpen={[Function]}
              onRequestCloseCustom={[Function]}
              trigger={
                <span
                  className="sfc1 f14 fw7 at_edit1"
                  onClick={[Function]}
                >
                  Edit
                </span>
              }
            >
              <ReduxForm
                initialValues={
                  Object {
                    "email": "UserEmail_1451193@gmail.com",
                    "isdCode": "+91",
                    "phoneNo": "9498297800",
                  }
                }
                onSubmit={[Function]}
              />
            </ModalComponent>,
          ],
          "className": "flex alignCenter spaceBetween mb15",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="block input-24 mr8"
                >
                  <IconSvg />
                </span>,
                <span
                  className="sfc6 at_headingContectDetail"
                >
                  Contact Details
                </span>,
              ],
              "className": "flex alignCenter f16 fw9 m0 flexFull",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <IconSvg />,
                  "className": "block input-24 mr8",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Contact Details",
                  "className": "sfc6 at_headingContectDetail",
                },
                "ref": null,
                "rendered": "Contact Details",
                "type": "span",
              },
            ],
            "type": "h6",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <ReduxForm
                initialValues={
                  Object {
                    "email": "UserEmail_1451193@gmail.com",
                    "isdCode": "+91",
                    "phoneNo": "9498297800",
                  }
                }
                onSubmit={[Function]}
              />,
              "customClass": "",
              "customCloseTrigger": false,
              "disabled": false,
              "fullView": true,
              "hasCustomClose": true,
              "hasNoClose": false,
              "isTriggerFullView": false,
              "isWhiteIcon": false,
              "onAfterModalOpen": [Function],
              "onRequestCloseCustom": [Function],
              "trigger": <span
                className="sfc1 f14 fw7 at_edit1"
                onClick={[Function]}
              >
                Edit
              </span>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "initialValues": Object {
                  "email": "UserEmail_1451193@gmail.com",
                  "isdCode": "+91",
                  "phoneNo": "9498297800",
                },
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ForwardRef(render)
              className="flexFull mb15 break-word"
            >
              <p>
                Email ID
              </p>
              <p
                className="at_email"
              >
                UserEmail_1451193@gmail.com
              </p>
            </ForwardRef(render)>,
            <ForwardRef(render)
              className="flexFull mb15 break-word"
            >
              <p>
                Phone Number
              </p>
              <p
                className="at_phone"
              >
                +919498297800
              </p>
            </ForwardRef(render)>,
          ],
          "className": "flex flexWrap",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <p>
                  Email ID
                </p>,
                <p
                  className="at_email"
                >
                  UserEmail_1451193@gmail.com
                </p>,
              ],
              "className": "flexFull mb15 break-word",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email ID",
                },
                "ref": null,
                "rendered": "Email ID",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "UserEmail_1451193@gmail.com",
                  "className": "at_email",
                },
                "ref": null,
                "rendered": "UserEmail_1451193@gmail.com",
                "type": "p",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "div",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                Object {
                  "& p": Object {
                    "fontSize": "14px",
                    "lineHeight": "20px",
                    "margin": "0",
                  },
                  "& p:first-child": Object {
                    "color": "#b2b2b2",
                  },
                  "& p:last-child": Object {
                    "color": "#3E3E3E",
                  },
                  ":nth-child(even)": Object {
                    "paddingLeft": "12px",
                  },
                  ":nth-child(odd)": Object {
                    "paddingRight": "12px",
                  },
                  "maxWidth": "50%",
                  "minWidth": "50%",
                },
              ],
              "defaultProps": undefined,
              "displayName": "Styled(div)",
              "render": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <p>
                  Phone Number
                </p>,
                <p
                  className="at_phone"
                >
                  +919498297800
                </p>,
              ],
              "className": "flexFull mb15 break-word",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Phone Number",
                },
                "ref": null,
                "rendered": "Phone Number",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "+919498297800",
                  "className": "at_phone",
                },
                "ref": null,
                "rendered": "+919498297800",
                "type": "p",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "div",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                Object {
                  "& p": Object {
                    "fontSize": "14px",
                    "lineHeight": "20px",
                    "margin": "0",
                  },
                  "& p:first-child": Object {
                    "color": "#b2b2b2",
                  },
                  "& p:last-child": Object {
                    "color": "#3E3E3E",
                  },
                  ":nth-child(even)": Object {
                    "paddingLeft": "12px",
                  },
                  ":nth-child(odd)": Object {
                    "paddingRight": "12px",
                  },
                  "maxWidth": "50%",
                  "minWidth": "50%",
                },
              ],
              "defaultProps": undefined,
              "displayName": "Styled(div)",
              "render": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="flex alignCenter spaceBetween mb15"
          >
            <h6
              className="flex alignCenter f16 fw9 m0 flexFull"
            >
              <span
                className="block input-24 mr8"
              >
                <IconSvg />
              </span>
              <span
                className="sfc6 at_headingContectDetail"
              >
                Contact Details
              </span>
            </h6>
            <ModalComponent
              customClass=""
              customCloseTrigger={false}
              disabled={false}
              fullView={true}
              hasCustomClose={true}
              hasNoClose={false}
              isTriggerFullView={false}
              isWhiteIcon={false}
              onAfterModalOpen={[Function]}
              onRequestCloseCustom={[Function]}
              trigger={
                <span
                  className="sfc1 f14 fw7 at_edit1"
                  onClick={[Function]}
                >
                  Edit
                </span>
              }
            >
              <ReduxForm
                initialValues={
                  Object {
                    "email": "UserEmail_1451193@gmail.com",
                    "isdCode": "+91",
                    "phoneNo": "9498297800",
                  }
                }
                onSubmit={[Function]}
              />
            </ModalComponent>
          </div>,
          <div
            className="flex flexWrap"
          >
            <ForwardRef(render)
              className="flexFull mb15 break-word"
            >
              <p>
                Email ID
              </p>
              <p
                className="at_email"
              >
                UserEmail_1451193@gmail.com
              </p>
            </ForwardRef(render)>
            <ForwardRef(render)
              className="flexFull mb15 break-word"
            >
              <p>
                Phone Number
              </p>
              <p
                className="at_phone"
              >
                +919498297800
              </p>
            </ForwardRef(render)>
          </div>,
        ],
        "className": "sbcw p15 pb0 at_contactDetails",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h6
                className="flex alignCenter f16 fw9 m0 flexFull"
              >
                <span
                  className="block input-24 mr8"
                >
                  <IconSvg />
                </span>
                <span
                  className="sfc6 at_headingContectDetail"
                >
                  Contact Details
                </span>
              </h6>,
              <ModalComponent
                customClass=""
                customCloseTrigger={false}
                disabled={false}
                fullView={true}
                hasCustomClose={true}
                hasNoClose={false}
                isTriggerFullView={false}
                isWhiteIcon={false}
                onAfterModalOpen={[Function]}
                onRequestCloseCustom={[Function]}
                trigger={
                  <span
                    className="sfc1 f14 fw7 at_edit1"
                    onClick={[Function]}
                  >
                    Edit
                  </span>
                }
              >
                <ReduxForm
                  initialValues={
                    Object {
                      "email": "UserEmail_1451193@gmail.com",
                      "isdCode": "+91",
                      "phoneNo": "9498297800",
                    }
                  }
                  onSubmit={[Function]}
                />
              </ModalComponent>,
            ],
            "className": "flex alignCenter spaceBetween mb15",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="block input-24 mr8"
                  >
                    <IconSvg />
                  </span>,
                  <span
                    className="sfc6 at_headingContectDetail"
                  >
                    Contact Details
                  </span>,
                ],
                "className": "flex alignCenter f16 fw9 m0 flexFull",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <IconSvg />,
                    "className": "block input-24 mr8",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Contact Details",
                    "className": "sfc6 at_headingContectDetail",
                  },
                  "ref": null,
                  "rendered": "Contact Details",
                  "type": "span",
                },
              ],
              "type": "h6",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <ReduxForm
                  initialValues={
                    Object {
                      "email": "UserEmail_1451193@gmail.com",
                      "isdCode": "+91",
                      "phoneNo": "9498297800",
                    }
                  }
                  onSubmit={[Function]}
                />,
                "customClass": "",
                "customCloseTrigger": false,
                "disabled": false,
                "fullView": true,
                "hasCustomClose": true,
                "hasNoClose": false,
                "isTriggerFullView": false,
                "isWhiteIcon": false,
                "onAfterModalOpen": [Function],
                "onRequestCloseCustom": [Function],
                "trigger": <span
                  className="sfc1 f14 fw7 at_edit1"
                  onClick={[Function]}
                >
                  Edit
                </span>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "initialValues": Object {
                    "email": "UserEmail_1451193@gmail.com",
                    "isdCode": "+91",
                    "phoneNo": "9498297800",
                  },
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ForwardRef(render)
                className="flexFull mb15 break-word"
              >
                <p>
                  Email ID
                </p>
                <p
                  className="at_email"
                >
                  UserEmail_1451193@gmail.com
                </p>
              </ForwardRef(render)>,
              <ForwardRef(render)
                className="flexFull mb15 break-word"
              >
                <p>
                  Phone Number
                </p>
                <p
                  className="at_phone"
                >
                  +919498297800
                </p>
              </ForwardRef(render)>,
            ],
            "className": "flex flexWrap",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <p>
                    Email ID
                  </p>,
                  <p
                    className="at_email"
                  >
                    UserEmail_1451193@gmail.com
                  </p>,
                ],
                "className": "flexFull mb15 break-word",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email ID",
                  },
                  "ref": null,
                  "rendered": "Email ID",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "UserEmail_1451193@gmail.com",
                    "className": "at_email",
                  },
                  "ref": null,
                  "rendered": "UserEmail_1451193@gmail.com",
                  "type": "p",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "div",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  Object {
                    "& p": Object {
                      "fontSize": "14px",
                      "lineHeight": "20px",
                      "margin": "0",
                    },
                    "& p:first-child": Object {
                      "color": "#b2b2b2",
                    },
                    "& p:last-child": Object {
                      "color": "#3E3E3E",
                    },
                    ":nth-child(even)": Object {
                      "paddingLeft": "12px",
                    },
                    ":nth-child(odd)": Object {
                      "paddingRight": "12px",
                    },
                    "maxWidth": "50%",
                    "minWidth": "50%",
                  },
                ],
                "defaultProps": undefined,
                "displayName": "Styled(div)",
                "render": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <p>
                    Phone Number
                  </p>,
                  <p
                    className="at_phone"
                  >
                    +919498297800
                  </p>,
                ],
                "className": "flexFull mb15 break-word",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Phone Number",
                  },
                  "ref": null,
                  "rendered": "Phone Number",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "+919498297800",
                    "className": "at_phone",
                  },
                  "ref": null,
                  "rendered": "+919498297800",
                  "type": "p",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "div",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  Object {
                    "& p": Object {
                      "fontSize": "14px",
                      "lineHeight": "20px",
                      "margin": "0",
                    },
                    "& p:first-child": Object {
                      "color": "#b2b2b2",
                    },
                    "& p:last-child": Object {
                      "color": "#3E3E3E",
                    },
                    ":nth-child(even)": Object {
                      "paddingLeft": "12px",
                    },
                    ":nth-child(odd)": Object {
                      "paddingRight": "12px",
                    },
                    "maxWidth": "50%",
                    "minWidth": "50%",
                  },
                ],
                "defaultProps": undefined,
                "displayName": "Styled(div)",
                "render": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
